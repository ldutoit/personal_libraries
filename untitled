#!/usr/bin/env python2 
from  gefes.common.slurm  import SLURMCommand
import sh,gzip,os,sys
import vcf_tools as vcft
import vcf
import metadata as mt
import sexspecificfst as sexfst
import random

#calculate nucleotide diversity
#module load bioinfo-tools tabix bcftools

#run from inside "/home/ludovic/nobackup_ludo/ASE_sfs"

CE = "/pica/v16/b2010010_nobackup/Mi.for.Ludo/fAlb15.phastConsTP70_CEs_version2.all_scaffolds.bed"
CE =  "/pica/v16/b2010010_nobackup/Mi.for.Ludo/fAlb15.phastConsTP70_CEs_version2.all_scaffolds.bed"

os.system(" mkdir beds/CE -p")
os.system(" mkdir beds/CE -p")

os.system("split "+CE+"  beds/CE/ -a 5")
os.system("split "+CE+"  beds/CE/ -a 5")

folder_beds = "beds/CE/"
pops = [ mt.I ]#mt.gotland86allclean,€ all the populations from the metadata module, include info on vcf and ind
annot =""
mincov = 1 # minimum for all individuals in the pop to have for a site to be considered

#list of jobs to redo based on log names. if empty, run all the files in the folder_beds EXAMPLE toredo =   "popgotland95fst_boot10025-10225", "popgotland95fst_boot10050-10250"]
toredo = []

njobs = 0
if not os.path.exists("all_sfs_mi"):
	os.mkdir("all_sfs_mi")
	os.mkdir("all_sfs_mi/logs/")
for pop in pops :
	print pop 
	if not os.path.exists("all_sfs_mi/"+pop.popcode):
			os.mkdir("all_sfs_mi/"+pop.popcode)
	ngenes = 0
	command = "#!/usr/bin/env python2\nimport vcf_tools as vcft\nimport metadata as mt\n"
	for gene in os.listdir(folder_beds):
		ngenes +=1
		bed = folder_beds+"/"+gene
		command+="vcft.all_freq_spectrum_vcf_bed('%s','%s','%s','%s',mincov=1,maxcov=10000,inds=%s,bgzip=True,min_nsites=1,called=True,nb_ind_with_min_cov='all',uppmax=False,sep='\t')\n" %(pop.vcf_snps ,  pop.vcf_allsites ,  bed,"all_sfs_mi/"+pop.popcode+"/"+os.path.basename(bed).strip(".bed")+"_withsfs.bed",str(pop.inds))
		if ngenes%1 == 0 :
			if 'pop%spi_%i'%(pop.popcode,ngenes)  in toredo or len(toredo) ==0:
				njobs+=1
				#launch that shit	
				job = SLURMCommand(command, time="20:00:00",job_name='pop%spi_%i'%(pop.popcode,ngenes),  project="b2010010",out_file='all_sfs_mi/logs/pop%spi_%i'%(pop.popcode,ngenes),cores="1",partition="core")
	 			job.launch()
	 			print 'pop%sfst_boot%i-%i'%(pop.popcode,ngenes,ngenes+25)
			command =  "#!/usr/bin/env python2\nimport vcf_tools as vcft\nimport metadata as mt\n"



folder_beds = "beds/CE/"
pops = [ mt.I ]#mt.gotland86allclean,€ all the populations from the metadata module, include info on vcf and ind
annot =""
mincov = 1 # minimum for all individuals in the pop to have for a site to be considered

#list of jobs to redo based on log names. if empty, run all the files in the folder_beds EXAMPLE toredo =   "popgotland95fst_boot10025-10225", "popgotland95fst_boot10050-10250"]
toredo = []

njobs = 0
if not os.path.exists("all_sfs_mi"):
	os.mkdir("all_sfs_mi")
	os.mkdir("all_sfs_mi/logs/")
for pop in pops :
	print pop 
	if not os.path.exists("all_sfs_mi/"+pop.popcode):
			os.mkdir("all_sfs_mi/"+pop.popcode)
	ngenes = 0
	command = "#!/usr/bin/env python2\nimport vcf_tools as vcft\nimport metadata as mt\n"
	for gene in os.listdir(folder_beds):
		ngenes +=1
		bed = folder_beds+"/"+gene
		command+="vcft.all_freq_spectrum_vcf_bed('%s','%s','%s','%s',mincov=1,maxcov=10000,inds=%s,bgzip=True,min_nsites=1,called=True,nb_ind_with_min_cov='all',uppmax=False,sep='\t')\n" %(pop.vcf_snps ,  pop.vcf_allsites ,  bed,"all_sfs_mi/"+pop.popcode+"/"+os.path.basename(bed).strip(".bed")+"_withsfs.bed",str(pop.inds))
		if ngenes%1 == 0 :
			if 'pop%spi_%i'%(pop.popcode,ngenes)  in toredo or len(toredo) ==0:
				njobs+=1
				#launch that shit	
				job = SLURMCommand(command, time="20:00:00",job_name='pop%spi_%i'%(pop.popcode,ngenes),  project="b2010010",out_file='all_sfs_mi/logs/pop%spi_%i'%(pop.popcode,ngenes),cores="1",partition="core")
	 			job.launch()
	 			print 'pop%sfst_boot%i-%i'%(pop.popcode,ngenes,ngenes+25)
			command =  "#!/usr/bin/env python2\nimport vcf_tools as vcft\nimport metadata as mt\n"



